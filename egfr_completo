library(shiny)
library(xgboost)
library(dplyr)

# Load your trained ML model
model <- readRDS('model_egfr.RDS')

# KFRE simplified formula (5-year only)
kfremodel_new <- function(age, sex, egfr, acr) {
  safe_egfr <- pmax(egfr, 1)
  safe_acr  <- pmax(acr, 1)
  
  ln_acr <- log(safe_acr)
  
  formula <- (0.2694 * sex) + 
    (-0.21670 * (age/10)) + 
    (-0.55418 * (safe_egfr/5)) + 
    (0.45608 * ln_acr)
  
  lp_shifted <- formula + 2.96774
  
  risk <- 1 - 0.924^(exp(lp_shifted))
  
  return(risk)
}

ui <- fluidPage(
  titlePanel("Kidney Failure Risk Equation (KFRE) - 5 Year Risk Calculator"),
  
  sidebarLayout(
    sidebarPanel(
      numericInput("age", "Idade (anos):", value = 50, min = 0, max = 120),
      numericInput("cretmg", "Creatinina (mg/dL):", value = 1.2, min = 0.1, max = 20),
      selectInput("sexe_male", "Sexo:", choices = c("Masculino" = 1, "Feminino" = 0)),
      
      tags$hr(),
      tags$b("⚠ Altura (apenas para crianças - Bedside Schwartz)"),
      numericInput("height", "Altura (cm):", value = 160, min = 30, max = 220),
      
      tags$hr(),
      tags$b("⚠ ACR (Albumina/Creatinina mg/g):"),
      numericInput("acr", "ACR (mg/g):", value = 50, min = 0.1, max = 5000),
      
      tags$hr(),
      actionButton("predict_btn", "Calcular")
    ),
    
    mainPanel(
      h3("Resultados:"),
      htmlOutput("prediction_ml"),
      htmlOutput("prediction_ckdepi"),
      htmlOutput("prediction_schwartz"),
      tags$hr(),
      h3("Risco de Progressão para Kidney Failure (KFRE 5 anos):"),
      htmlOutput("kfre_5yr"),
      tags$hr(),
      tags$p("Classificação de risco baseada na KFRE 5 anos:"),
      tags$p("0–5%: Baixo risco (verde); 5–15%: Risco intermediário (amarelo); >15%: Alto risco (vermelho).")
    )
  )
)

server <- function(input, output) {
  
  prediction_result <- eventReactive(input$predict_btn, {
    
    # Machine Learning Prediction
    new_data <- data.frame(
      age = input$age,
      cretmg = input$cretmg,
      sexe_male = as.numeric(input$sexe_male)
    )
    
    new_data_matrix <- as.matrix(new_data)
    predicted_ml <- predict(model, new_data_matrix)
    predicted_ml <- max(predicted_ml, 0.1)
    
    # CKD-EPI 2021 (somente se idade >= 18)
    sexe_text <- ifelse(as.numeric(input$sexe_male) == 1, "male", "female")
    age <- input$age
    cretmg <- input$cretmg
    
    predicted_ckdepi <- NA
    if (age >= 18) {
      predicted_ckdepi <- case_when(
        sexe_text == "female" & cretmg <= 0.7 ~ 143 * ((cretmg/0.7)^-0.241) * (0.9938^age),
        sexe_text == "female" & cretmg > 0.7 ~ 143 * ((cretmg/0.7)^-1.200) * (0.9938^age),
        sexe_text == "male" & cretmg <= 0.9 ~ 142 * ((cretmg/0.9)^-0.302) * (0.9938^age),
        sexe_text == "male" & cretmg > 0.9 ~ 142 * ((cretmg/0.9)^-1.200) * (0.9938^age)
      )
    }
    
    # Bedside Schwartz (apenas se idade < 18)
    predicted_schwartz <- NA
    if (age < 18) {
      height_cm <- input$height
      predicted_schwartz <- 0.413 * (height_cm / cretmg)
    }
    
    # KFRE 5 years calculation
    acr <- input$acr
    sex_num <- as.numeric(input$sexe_male)
    
    risk_5yr <- kfremodel_new(age, sex_num, predicted_ml, acr)
    
    list(
      ml = predicted_ml, 
      ckdepi = predicted_ckdepi, 
      schwartz = predicted_schwartz,
      kfre_5yr = risk_5yr
    )
  })
  
  output$prediction_ml <- renderUI({
    req(prediction_result())
    HTML(paste0("<span style='color:blue;'>eGFR (Machine Learning): ", 
                round(prediction_result()$ml, 2), " ml/min/1.73m²</span>"))
  })
  
  output$prediction_ckdepi <- renderUI({
    req(prediction_result())
    if (!is.na(prediction_result()$ckdepi)) {
      HTML(paste0("<span style='color:blue;'>eGFR (CKD-EPI 2021): ", 
                  round(prediction_result()$ckdepi, 2), " ml/min/1.73m²</span>"))
    } else {
      HTML("<span style='color:red;'>CKD-EPI 2021 não aplicável para idade < 18 anos.</span>")
    }
  })
  
  output$prediction_schwartz <- renderUI({
    req(prediction_result())
    if (!is.na(prediction_result()$schwartz)) {
      HTML(paste0("<span style='color:blue;'>eGFR (Bedside Schwartz): ", 
                  round(prediction_result()$schwartz, 2), " ml/min/1.73m²</span>"))
    } else {
      HTML("<span style='color:red;'>Bedside Schwartz não aplicável para idade ≥ 18 anos.</span>")
    }
  })
  
  output$kfre_5yr <- renderUI({
    req(prediction_result())
    risk_percent <- round(prediction_result()$kfre_5yr * 100, 1)
    
    color <- ifelse(risk_percent <= 5, "green",
                    ifelse(risk_percent <= 15, "orange", "red"))
    
    HTML(paste0("<b>Risco 5 anos (KFRE): </b>",
                "<span style='color:", color, "; font-weight:bold;'>",
                risk_percent, "%</span>"))
  })
  
}

shinyApp(ui = ui, server = server)
